// <auto-generated />
using System;
using APTEKA_Software.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APTEKA_Software.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230915105731_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APTEKA_Software.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityDelivered")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Deliveries", (string)null);

                    b.HasData(
                        new
                        {
                            DeliveryId = 1,
                            DeliveryDate = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3888),
                            ItemId = 1,
                            QuantityDelivered = 15,
                            UserId = 1
                        },
                        new
                        {
                            DeliveryId = 2,
                            DeliveryDate = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3894),
                            ItemId = 2,
                            QuantityDelivered = 11,
                            UserId = 2
                        },
                        new
                        {
                            DeliveryId = 3,
                            DeliveryDate = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3897),
                            ItemId = 3,
                            QuantityDelivered = 30,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("APTEKA_Software.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.ToTable("Items", (string)null);

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            AvailableQuantity = 10,
                            DateCreated = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3409),
                            DeliveryPrice = 0m,
                            IsDeleted = false,
                            ItemName = "Валидол",
                            SalePrice = 5m
                        },
                        new
                        {
                            ItemId = 2,
                            AvailableQuantity = 20,
                            DateCreated = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3414),
                            DeliveryPrice = 0m,
                            IsDeleted = false,
                            ItemName = "NoSpa",
                            SalePrice = 10m
                        },
                        new
                        {
                            ItemId = 3,
                            AvailableQuantity = 50,
                            DateCreated = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3416),
                            DeliveryPrice = 0m,
                            IsDeleted = false,
                            ItemName = "Vitamin C",
                            SalePrice = 2m
                        },
                        new
                        {
                            ItemId = 4,
                            AvailableQuantity = 42,
                            DateCreated = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3418),
                            DeliveryPrice = 0m,
                            IsDeleted = false,
                            ItemName = "Vitamin D",
                            SalePrice = 6m
                        });
                });

            modelBuilder.Entity("APTEKA_Software.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantitySold")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales", (string)null);

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            ItemId = 1,
                            QuantitySold = 3,
                            SaleDate = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3487),
                            TotalAmount = 10.0m,
                            UserId = 1
                        },
                        new
                        {
                            SaleId = 2,
                            ItemId = 2,
                            QuantitySold = 2,
                            SaleDate = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3491),
                            TotalAmount = 5.0m,
                            UserId = 2
                        },
                        new
                        {
                            SaleId = 3,
                            ItemId = 3,
                            QuantitySold = 2,
                            SaleDate = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3494),
                            TotalAmount = 20.0m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("APTEKA_Software.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateRegistered = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3189),
                            FirstName = "Peter",
                            IsDeleted = false,
                            LastName = "Kompotov",
                            Password = "123456",
                            Username = "pesho"
                        },
                        new
                        {
                            UserId = 2,
                            DateRegistered = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3220),
                            FirstName = "George",
                            IsDeleted = false,
                            LastName = "Paprikov",
                            Password = "222333",
                            Username = "gosho"
                        },
                        new
                        {
                            UserId = 3,
                            DateRegistered = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3223),
                            FirstName = "Ivan",
                            IsDeleted = false,
                            LastName = "Krushov",
                            Password = "432432",
                            Username = "vanio"
                        },
                        new
                        {
                            UserId = 4,
                            DateRegistered = new DateTime(2023, 9, 15, 13, 57, 30, 941, DateTimeKind.Local).AddTicks(3225),
                            FirstName = "Alexander",
                            IsDeleted = false,
                            LastName = "Slivov",
                            Password = "654321",
                            Username = "sashko"
                        });
                });

            modelBuilder.Entity("APTEKA_Software.Models.Delivery", b =>
                {
                    b.HasOne("APTEKA_Software.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APTEKA_Software.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("APTEKA_Software.Models.Sale", b =>
                {
                    b.HasOne("APTEKA_Software.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APTEKA_Software.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}

@{
    this.ViewData["Title"] = "Users";
}

@model PaginatedList<User>

<h2 class="text-dark font-weight-bold">Users</h2>

<div>
    <form asp-controller="Admins" asp-action="Index" method="get">
        <input type="text" name="query" placeholder="Search by username..." value="@ViewData["CurrentQuery"]" />
        <button class="btn btn-dark" type="submit">Search</button>
    </form>
</div>



<br />

@if (Model.Count() == 0)
{
    <p class="text-dark">No user matches your search.</p>
}
else
{   
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-dark">
            <thead class="table-dark">
                <tr>
                    <th class="align-middle text-center">Username</th>
                    <th class="w-25 align-middle text-center">Email</th>
                    <th class="align-middle text-center">Firstname</th>
                    <th class="align-middle text-center">Lastname</th>
                    <th class="w-14 align-middle text-center">Date created</th>
                    <th class="align-middle text-center">Blocked</th>
                    <th class="align-middle text-center">Admin</th>
                    <th class="w-14 align-middle text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td class="align-middle text-center">@user.Username</td>
                        <td class="align-middle text-center">@user.Email</td>
                        <td class="align-middle text-center">@user.FirstName</td>
                        <td class="align-middle text-center">@user.LastName</td>
                        <td class="align-middle text-center">@user.CreatedDate</td>
                        <td class="align-middle text-center">@user.IsBlocked</td>
                        <td class="align-middle text-center">@user.IsAdmin</td>
                        <td class="align-middle text-center">
                            <a asp-controller="Admins" asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning">Edit</a>
                            <a asp-controller="Admins" asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger">Delete</a>
                            <div class="dropdown-center m-1">
                                <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Block/Unblock
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a asp-controller="Admins" asp-action="Unblock" asp-route-id="@user.Id" class="dropdown-item">Unblock</a></li>
                                    <li><a asp-controller="Admins" asp-action="Block" asp-route-id="@user.Id" class="dropdown-item">Block</a></li>
                                </ul>
                            </div>

                            <div class="dropdown-center m-1 ">
                                <button class="btn btn-info dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Promote/Demote
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a asp-controller="Admins" asp-action="Promote" asp-route-id="@user.Id" class="dropdown-item">Promote</a></li>
                                    <li><a asp-controller="Admins" asp-action="Demote" asp-route-id="@user.Id" class="dropdown-item">Demote</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@{
    string prevButtonState = Model.HasPrevPage ? "" : "disabled";
    string nextButtonState = Model.HasNextPage ? "" : "disabled";
}

<nav aria-label="Users Pagination">
    <ul class="pagination justify-content-center">
        @if (Model.PageNumber > 1)
        {
            <li class="page-item @prevButtonState">
                <a class="page-link text-black" href="@Url.Action("Index", new { query = ViewData["CurrentQuery"], pageNumber = Model.PageNumber - 1 })">Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link text-black" href="@Url.Action("Index", new { query = ViewData["CurrentQuery"], pageNumber = i })">@i</a>
            </li>
        }
        @if (Model.PageNumber < Model.TotalPages)
        {
            <li class="page-item @nextButtonState">
                <a class="page-link text-black" href="@Url.Action("Index", new { query = ViewData["CurrentQuery"], pageNumber = Model.PageNumber + 1 })">Next</a>
            </li>
        }
    </ul>
</nav>


<br />
